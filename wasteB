_dl_relocate_static_pie
3
repz
nopw
nopl
create_ListHead
14
push
mov
mov
callq
mov
test
je
movq
pop
retq
mov
pop
jmpq
nopl
get_newNode
16
push
mov
mov
callq
test
je
mov
movq
pop
retq
mov
callq
xor
pop
retq
nopl
push_Front
24
push
push
push
mov
mov
mov
callq
test
je
mov
movq
jmp
mov
callq
xor
mov
mov
mov
mov
add
pop
pop
retq
data16
push_Back
26
push
push
push
mov
mov
nopl
mov
mov
test
jne
mov
callq
test
je
mov
movq
jmp
mov
callq
xor
mov
add
pop
pop
retq
xchg
pop_Front
13
mov
mov
test
je
push
mov
mov
callq
mov
pop
jmpq
retq
nopw
pop_Back
14
push
mov
data16
mov
mov
mov
test
jne
callq
movq
mov
pop
jmpq
nopw
delete_List
18
mov
mov
test
jne
mov
jmpq
nopw
mov
test
je
cmp
jne
push
callq
mov
pop
jmpq
xchg
print_List
20
push
mov
mov
test
je
nopl
mov
mov
xor
callq
mov
test
jne
mov
pop
jmpq
mov
pop
jmpq
nopl
length_List
9
mov
mov
nopl
mov
add
test
jne
retq
nopl
search_List
19
mov
mov
test
je
mov
data16
cmp
je
add
mov
test
jne
push
mov
callq
xor
add
retq
data16
destory_List
22
push
push
push
mov
mov
mov
test
je
data16
mov
callq
mov
test
jne
mov
add
movq
mov
add
pop
pop
jmpq
invert
15
mov
movq
test
je
xor
data16
mov
mov
mov
mov
mov
test
jne
retq
nopl
main
209
push
push
push
push
push
sub
xor
lea
jmp
mov
callq
mov
callq
add
cmp
ja
jmpq
mov
test
je
data16
mov
callq
mov
test
jne
movq
jmp
mov
callq
mov
movq
jmp
mov
callq
mov
xor
mov
callq
mov
mov
data16
mov
mov
test
jne
mov
callq
test
je
mov
movq
mov
jmpq
mov
callq
mov
xor
mov
callq
mov
mov
callq
test
je
mov
movq
jmpq
mov
test
je
mov
mov
callq
jmpq
mov
data16
mov
mov
mov
test
jne
callq
movq
jmpq
mov
test
je
nop
mov
mov
xor
callq
mov
test
jne
mov
callq
jmpq
mov
callq
mov
xor
mov
callq
mov
test
je
mov
nopl
cmp
je
mov
test
jne
mov
callq
jmpq
mov
mov
nopl
mov
add
test
jne
mov
xor
callq
jmpq
mov
callq
mov
xor
mov
callq
mov
test
je
mov
mov
nopl
cmp
je
add
mov
test
jne
mov
callq
jmpq
mov
movq
test
je
xor
nopl
mov
mov
mov
mov
mov
test
jne
jmpq
mov
callq
mov
jmpq
mov
callq
xor
mov
mov
mov
jmpq
mov
callq
jmpq
mov
xor
callq
jmpq
callq
mov
callq
jmpq
mov
test
je
nopl
mov
callq
mov
test
jne
movq
mov
callq
mov
callq
xor
add
pop
pop
pop
pop
pop
retq
nopl
